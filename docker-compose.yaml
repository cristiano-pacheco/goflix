services:
  goflix-postgres:
    image: postgres:17-alpine
    volumes:
      - postgres-data:/data/postgres
    environment:
      POSTGRES_DB: goflix
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 'postgres'
      PGDATA: /data/postgres
    ports:
      - '5432:5432'
    networks:
      - backend

  goflix-redis:
    image: redis:7-alpine
    container_name: goflix-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - backend

  # Jaeger
  goflix-jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: goflix-jaeger
    ports:
      - "5775:5775/udp"   # accept zipkin.thrift over compact thrift protocol
      - "6831:6831/udp"   # accept jaeger.thrift over compact thrift protocol
      - "6832:6832/udp"   # accept jaeger.thrift over binary thrift protocol
      - "5778:5778"       # serve configs
      - "16686:16686"     # serve frontend
      - "14250:14250"     # accept model.proto
      - "14268:14268"     # accept jaeger.thrift directly from clients
      - "14269:14269"     # admin port: health check at / and metrics at /metrics
      - "9411:9411"       # zipkin compatible endpoint
      - "4317:4317"       # OTLP gRPC
      - "4318:4318"       # OTLP HTTP
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - backend

  # Prometheus
  goflix-prometheus:
    image: prom/prometheus:latest
    container_name: goflix-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - backend
    depends_on:
      - goflix-jaeger

  # Grafana
  goflix-grafana:
    image: grafana/grafana:latest
    container_name: goflix-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-data:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - backend
    depends_on:
      - goflix-prometheus

volumes:
  prometheus-data:
  grafana-data:
  postgres-data:
  redis-data:

networks:
  backend:
